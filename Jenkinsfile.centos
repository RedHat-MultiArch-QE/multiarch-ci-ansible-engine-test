properties([
  parameters([
    choiceParam(
      name: 'ARCH',
      choices: "x86_64\nppc64le\naarch64",
      description: 'Architecture'
    ),
    string(
      name: 'ORIGIN_REPO',
      description: 'Origin repo',
      defaultValue: 'https://github.com/openshift/origin.git'
    ),
    string(
      name: 'ORIGIN_BRANCH',
      description: 'Origin branch',
      defaultValue: 'master'
    ),
    string(
      name: 'OS_BUILD_ENV_IMAGE',
      description: 'openshift-release image',
      defaultValue: 'openshiftmultiarch/origin-release:golang-1.8'
    )
  ])
])

@Library('github.com/CentOS/cico-pipeline-library@master') import org.centos.*

def provisionHost(){
  def utils = new Utils()
  utils.allocateDuffyCciskel('Provision')
  job_props = "${env.ORIGIN_WORKSPACE}/job.props"
  job_props_groovy = "${env.ORIGIN_WORKSPACE}/job.groovy"
  utils.convertProps(job_props, job_props_groovy)
  load(job_props_groovy)
}

def teardownHost(){
  def utils = new Utils()
  utils.teardownDuffyCciskel('Teardown')
}

node("paas-sig-ci-slave01") {
  ansiColor('xterm') {
    timestamps {
      stage('Test') {
        withDuffyHost {
	  echo 'hi'
	}
      }
    }
  }
}
